/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if (head ==null || head.next==null || head.next.next==null) {
            return null;
        }
        ListNode n1 = head.next;
        ListNode n2 = head.next.next;
        while (n1!=n2) {
            if (n1.next == null || n2.next==null || n2.next.next == null) {
                return null;
            }
            n1 = n1.next;
            n2 = n2.next.next;
        }
        while (head != n1) {
            head = head.next;
            n1 = n1.next;
        }
        return n1;
    }
}
